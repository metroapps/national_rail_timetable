<?php
declare(strict_types = 1);

use Miklcct\NationalRailTimetable\Controllers\BoardController;
use Miklcct\RailOpenTimetableData\Models\LocationWithCrs;
use Miklcct\RailOpenTimetableData\Models\ServiceCallWithDestination;
use Miklcct\RailOpenTimetableData\Models\Station;
use Miklcct\NationalRailTimetable\Views\Components\Board;
use Miklcct\NationalRailTimetable\Views\ServiceView;
use Miklcct\NationalRailTimetable\Views\ViewMode;
use function Miklcct\NationalRailTimetable\Views\get_arrival_link;
use function Miklcct\NationalRailTimetable\Views\show_activities;
use function Miklcct\NationalRailTimetable\Views\show_facilities;
use function Miklcct\NationalRailTimetable\Views\show_time;
use function Miklcct\NationalRailTimetable\Views\show_toc;
use function Miklcct\ThinPhpApp\Escaper\html;

/** @var Board $this */

$query = $this->query;
$board = $this->board;
$station = $query->station;
?>
<table>
    <thead>
<?php
if ($query->arrivalMode) {
?>
        <tr><th colspan="7"><a href="<?= $this->getDayOffsetLink(1) ?>">Next day</a></th></tr>
<?php
} else {
?>
        <tr><th colspan="7"><a href="<?= $this->getDayOffsetLink(-1) ?>">Previous day</a></th></tr>
<?php
}
?>
        <tr>
            <th>Time</th>
            <th></th>
            <th>Pl.</th>
            <th>TOC</th>
<!--            <th>Train no.</th>-->
            <th><?= $query->arrivalMode ? 'Origin' : 'Destination' ?></th>
            <th>Calling at</th>
        </tr>
    </thead>
    <tfoot>
<?php
if ($query->arrivalMode) {
?>
        <tr><th colspan="7"><a href="<?= $this->getDayOffsetLink(-1) ?>">Previous day</a></th></tr>
<?php
} else {
?>
        <tr><th colspan="7"><a href="<?= $this->getDayOffsetLink(1) ?>">Next day</a></th></tr>
<?php
}
?>
    </tfoot>
    <tbody>
<?php
$previous_timestamp = null;
foreach ($query->arrivalMode ? array_reverse($this->board->calls, true) : $this->board->calls as $h => $service_call) {
    $timestamp = $service_call->timestamp;
    $destinations = $query->arrivalMode ? $service_call->origins : $service_call->destinations;
    $portions_count = count($destinations);
    $portion_uids = array_keys($destinations);
    $overtaken_portions = array_combine(
        $portion_uids
        , array_map(
            static fn(string $uid) : bool => count($query->filter) === 1
                && $board->isPortionOvertaken(
                    $service_call,
                    $query->filter[0]->getCrsCode(),
                    $uid
                )
            , $portion_uids
        )
    );
    $whole_train_overtaken = !in_array(false, $overtaken_portions, true);
    $day_offset = $timestamp->setTime(0, 0)->diff($this->date->toDateTimeImmutable())->days;
?>
        <tr class="<?= $h % 2 ? 'odd' : 'even'?>" data-timestamp="<?= html($timestamp->getTimestamp()) ?>">
            <td class="time <?=
            $query->connectingTime === null || !$station instanceof Station
                ? ''
                : ($service_call->isValidConnection($query->connectingTime, $this->connectingToc ?? null) ? 'valid_connection' : 'invalid_connection')
            ?> <?= $whole_train_overtaken ? 'overtaken' : ''?>" rowspan="<?= html($portions_count) ?>">
                <?=
                show_time($timestamp, $this->date, ServiceView::getServiceUrl($service_call->uid, $service_call->date, $query->permanentOnly, ViewMode::BOARD))
                . show_activities($service_call->call->activities)
                ?>
            </td>
            <td class="<?= $whole_train_overtaken ? 'overtaken' : ''?>" rowspan="<?= html($portions_count) ?>"><?= show_facilities($service_call) ?></td>
            <td class="<?= $whole_train_overtaken ? 'overtaken' : ''?>" rowspan="<?= html($portions_count) ?>"><?= html($service_call->call->platform) ?></td>
            <td class="<?= $whole_train_overtaken ? 'overtaken' : ''?>" rowspan="<?= html($portions_count) ?>"><?= show_toc($service_call->toc) ?></td>
            <!--<td class="<?= $whole_train_overtaken ? 'overtaken' : ''?>" rowspan="<?= html($portions_count) ?>"><a href="<?= html(ServiceView::getServiceUrl($service_call->uid, $service_call->date, $query->permanentOnly, ViewMode::BOARD)) ?>"><?= html(substr($service_call->serviceProperty->rsid, 0, 6)) ?></a></td>-->
<?php
    foreach ($portion_uids as $i => $uid) {
        if ($i > 0) {
?>
        </tr>
        <tr class="<?= $h % 2 ? 'odd' : 'even'?>">
<?php
        }
?>
            <td class="destination <?= $overtaken_portions[$uid] ? 'overtaken' : '' ?>"><?= html($destinations[$uid]->location->getShortName()) ?></td>
            <td class="calls <?= $overtaken_portions[$uid] ? 'overtaken' : '' ?>"><?=
                implode(
                    ', '
                    , array_map(
                        function(ServiceCallWithDestination $service_call) : string {
                            $station = $service_call->call->location;
                            $link = get_arrival_link(BoardController::URL, $service_call, $this->query);
                            /** @noinspection HtmlUnknownTarget */
                            return sprintf(
                                $link === null ? '<span class="%1$s">%3$s (%4$s)</span>' : '<span class="%s"><a href="%s">%s</a> (%s)</span>'
                                , $station instanceof LocationWithCrs && in_array($station->getCrsCode(), array_map(static fn(LocationWithCrs $destination) => $destination->getCrsCode(), $this->query->filter), true) ? 'destination' : ''
                                , html($link)
                                , html($station->getShortName())
                                , show_time($service_call->timestamp, $this->date) . show_activities($service_call->call->activities)
                            );
                        }
                        , array_filter(
                            $query->arrivalMode ? $service_call->precedingCalls : $service_call->subsequentCalls
                            , fn(ServiceCallWithDestination $service_call) : bool => $service_call->call->isPublicCall() && array_key_exists(
                                $uid,
                                $this->query->arrivalMode ? $service_call->origins : $service_call->destinations
                            )
                        )
                    )
                )
            ?></td>
<?php
    }
?>
        </tr>
<?php
    $previous_timestamp = $timestamp;
}
?>
    </tbody>
</table>
